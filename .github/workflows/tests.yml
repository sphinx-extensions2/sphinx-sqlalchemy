name: CI

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:

jobs:

  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
    - uses: pre-commit/action@v3.0.0

  tests:
    name: tests on py${{ matrix.python-version }} with sphinx~=${{ matrix.sphinx-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        sphinx-version: ["7.0"]
        os: ['ubuntu-latest']
        include:
          - python-version: "3.8"
            sphinx-version: "5.0"
            os: 'ubuntu-latest'
          - python-version: "3.8"
            sphinx-version: "6.0"
            os: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx~=${{ matrix.sphinx-version }} -e .[dev]
    - name: Test with pytest
      run: pytest -vv --cov=sphinx_sqlalchemy
      env:
        SQLALCHEMY_WARN_20: 1

  all-good:

    # This job does nothing and is only used for the branch protection
    # see https://github.com/marketplace/actions/alls-green#why

    if: always()

    needs:
    - pre-commit
    - tests

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  publish:

    name: Publish to PyPi
    needs: [pre-commit, tests]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: install flit
      run: |
        pip install flit~=3.4
    - name: Build and publish
      run: |
        flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}
